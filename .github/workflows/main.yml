name: Main Workflow
on:
  push:
    branches:
      - main

jobs:
  compute_build_order:
    name: Compute build order
    runs-on: ubuntu-24.04
    outputs:
      build_order: ${{ steps.create.outputs.build_order }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Read buildorder
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./build_order.json
      - id: create
        name: Create build-order
        run: echo "build_order=${{steps.package.outputs.content}}" >> "$GITHUB_OUTPUT" 
        # run: echo "build_order=[[[1, [\"windows\", \"linux\"]], [2, [\"windows\"]], [3, [\"linux\"]]], [4, 5], [6, 7, 8]]" >> "$GITHUB_OUTPUT" 

  basic_print:
    needs: [compute_build_order]
    runs-on: ubuntu-24.04
    steps:
      - name: Print
        run: |
          echo ${{needs.compute_build_order.outputs.build_order}}
  
  level0:
    if: fromJSON(needs.compute_build_order.outputs.build_order)[0]
    needs: [compute_build_order]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.compute_build_order.outputs.build_order)[0] }}
        config: [windows-2022, ubuntu-24.04]
    runs-on: ${{ matrix.config }}
    steps:
      - name: Printing
        run: echo ${{ toJSON(matrix.package) }}
      - name: Printing Windows
        if: matrix.config == 'windows-2022' && contains(toJSON(matrix.package[1]), 'windows')
        run: echo "PRINTING WIN ${{matrix.package[0]}}"
      - name: Printing linux
        if: matrix.config == 'ubuntu-24.04' && contains(toJSON(matrix.package[1]), 'linux')
        run: echo "PRINTING LINUX ${{matrix.package[0]}}"

  level1:
    if: fromJSON(needs.compute_build_order.outputs.build_order)[1]
    needs: [level0, compute_build_order]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.compute_build_order.outputs.build_order)[1] }}
    runs-on: ubuntu-24.04
    steps:
      - name: Printing
        run: echo "PRINTING ${{matrix.package}}"

  level2:
    if: fromJSON(needs.compute_build_order.outputs.build_order)[2]
    needs: [level1, compute_build_order]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.compute_build_order.outputs.build_order)[2] }}
    runs-on: ubuntu-24.04
    steps:
      - name: Printing
        run: echo "PRINTING ${{matrix.package}}"

  level3:
    if: fromJSON(needs.compute_build_order.outputs.build_order)[3]
    needs: [level2, compute_build_order]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.compute_build_order.outputs.build_order)[3] }}
    runs-on: ubuntu-24.04
    steps:
      - name: Printing
        run: echo "PRINTING ${{matrix.package}}"
 